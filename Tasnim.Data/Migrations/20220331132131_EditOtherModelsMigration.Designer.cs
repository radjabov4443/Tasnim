// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tasnim.Data.Contexts;

namespace Tasnim.Data.Migrations
{
    [DbContext(typeof(TasnimDbContext))]
    [Migration("20220331132131_EditOtherModelsMigration")]
    partial class EditOtherModelsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Tasnim.Domain.Entities.Audios.Audio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Length")
                        .HasColumnType("text");

                    b.Property<long?>("MentorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("SavedContentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SavedContentId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Books.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Mentors.Mentor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<long?>("TrainingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Posts.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Audio")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("MentorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SavedContentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Video")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SavedContentId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.SavedContents.SavedContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("SavedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SavedContents");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Tests.Test", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Trainings.Training", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Videos.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("MentorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("SavedContentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("SavedContentId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Audios.Audio", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Mentors.Mentor", "Mentor")
                        .WithMany("Audios")
                        .HasForeignKey("MentorId");

                    b.HasOne("Tasnim.Domain.Entities.SavedContents.SavedContent", null)
                        .WithMany("Audios")
                        .HasForeignKey("SavedContentId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Mentors.Mentor", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Trainings.Training", null)
                        .WithMany("Mentors")
                        .HasForeignKey("TrainingId");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Posts.Post", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Mentors.Mentor", "Mentor")
                        .WithMany("Posts")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tasnim.Domain.Entities.SavedContents.SavedContent", null)
                        .WithMany("Posts")
                        .HasForeignKey("SavedContentId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.SavedContents.SavedContent", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Users.User", "User")
                        .WithMany("SavedContents")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Tests.Test", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Users.User", null)
                        .WithMany("TestAnswers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Videos.Video", b =>
                {
                    b.HasOne("Tasnim.Domain.Entities.Mentors.Mentor", null)
                        .WithMany("Videos")
                        .HasForeignKey("MentorId");

                    b.HasOne("Tasnim.Domain.Entities.SavedContents.SavedContent", null)
                        .WithMany("Videos")
                        .HasForeignKey("SavedContentId");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Mentors.Mentor", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("Posts");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.SavedContents.SavedContent", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("Posts");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Trainings.Training", b =>
                {
                    b.Navigation("Mentors");
                });

            modelBuilder.Entity("Tasnim.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("SavedContents");

                    b.Navigation("TestAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
